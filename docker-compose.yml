version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: smartwaste-mysql
    environment:
      MYSQL_ROOT_PASSWORD: smartwaste123
      MYSQL_DATABASE: smartwaste
      MYSQL_USER: smartwaste
      MYSQL_PASSWORD: smartwaste123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - smartwaste-network
    restart: unless-stopped

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: smartwaste-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smartwaste-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MongoDB文档数据库
  mongodb:
    image: mongo:6
    container_name: smartwaste-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: smartwaste123
      MONGO_INITDB_DATABASE: smartwaste
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - smartwaste-network
    restart: unless-stopped

  # Kafka消息队列
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: smartwaste-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - smartwaste-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: smartwaste-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - smartwaste-network
    restart: unless-stopped

  # 服务注册中心 (Consul)
  consul:
    image: consul:latest
    container_name: smartwaste-consul
    ports:
      - "8500:8500"
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
    networks:
      - smartwaste-network
    restart: unless-stopped

  # 智慧环卫主应用
  smartwaste-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smartwaste-app
    depends_on:
      - mysql
      - redis
      - mongodb
      - kafka
      - consul
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: production
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/smartwaste?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: smartwaste
      SPRING_DATASOURCE_PASSWORD: smartwaste123
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: smartwaste
      SPRING_DATA_MONGODB_USERNAME: admin
      SPRING_DATA_MONGODB_PASSWORD: smartwaste123
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    networks:
      - smartwaste-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: smartwaste-nginx
    depends_on:
      - smartwaste-app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    networks:
      - smartwaste-network
    restart: unless-stopped

  # 监控系统 - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: smartwaste-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - smartwaste-network
    restart: unless-stopped

  # 监控系统 - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: smartwaste-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - smartwaste-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  mongodb_data:
  app_logs:
  app_uploads:
  nginx_logs:
  prometheus_data:
  grafana_data:

networks:
  smartwaste-network:
    driver: bridge